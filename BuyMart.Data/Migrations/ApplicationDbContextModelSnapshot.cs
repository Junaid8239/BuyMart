// <auto-generated />
using BuyMart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuyMart.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuyMart.Data.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("BuyMart.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://th.bing.com/th/id/OIP.5k8xtdEpB82aUSNURMtVOAHaEK?rs=1&pid=ImgDetMain",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://th.bing.com/th/id/OIP.Kc4LEsU19nGbEmxMFyG9fAHaFI?rs=1&pid=ImgDetMain",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://th.bing.com/th/id/OIP.n3sAXxDyR0gM6xT1ZwmXdQHaE8?rs=1&pid=ImgDetMain",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://www.news4user.com/wp-content/uploads/2023/08/90970312.webp",
                            Name = "Home Appliances"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/028/535/140/large_2x/many-colorful-toys-collection-on-the-desk-generative-ai-photo.jpg",
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("BuyMart.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "A high-performance laptop with 16GB RAM and 512GB SSD.",
                            ImageUrl = "https://cdn.mos.cms.futurecdn.net/gnG2Z6pK7CTBJmw4pRUy8i.jpg",
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Latest smartphone with 5G support and 128GB storage.",
                            ImageUrl = "https://www.worldshop.eu/medias/img/8941305692190_w1500_z_717540126/apple-iphone15promax-smartphone-256gb-natural-titanium.jpeg",
                            Name = "Smartphone",
                            Price = 699.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Wireless noise-canceling headphones with deep bass.",
                            ImageUrl = "https://www.bhphotovideo.com/images/images2500x2500/beats_by_dr_dre_900_00183_01_studio_wireless_over_ear_headphone_1037578.jpg",
                            Name = "Headphones",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "100% cotton comfortable t-shirt for everyday wear.",
                            ImageUrl = "https://th.bing.com/th/id/OIP.RHzRocDQ-VPOif5AmSbAeQHaKl?rs=1&pid=ImgDetMain",
                            Name = "T-Shirt",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Slim fit blue jeans made from high-quality denim.",
                            ImageUrl = "https://i5.walmartimages.com/asr/eb9aaf39-7462-44c9-bd86-274cfb1d38fb_1.1440eb2973046b94785da8e1d9c4108f.jpeg",
                            Name = "Jeans",
                            Price = 39.99m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Learn C# with hands-on projects and real-world examples.",
                            ImageUrl = "https://i5.walmartimages.com/asr/6ce339ee-e613-4052-ada2-2154d56b4079_1.c800e07a14374d96506e741906f3a907.jpeg",
                            Name = "C# Programming Book",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "Energy-efficient refrigerator with a capacity of 350L.",
                            ImageUrl = "https://th.bing.com/th/id/OIP.ItyEWfwgW8YqEEs8jkjWyQHaHa?rs=1&pid=ImgDetMain",
                            Name = "Refrigerator",
                            Price = 499.99m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Description = "Compact microwave oven with multiple cooking modes.",
                            ImageUrl = "https://www.fisherpaykel.com/images/kitchen/cook/built-in-ovens/gallery/OB76DDEPX3-feature-365-gal.jpg",
                            Name = "Microwave Oven",
                            Price = 199.99m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Description = "Battery-operated remote control toy car.",
                            ImageUrl = "https://i5.walmartimages.com/asr/f757fa39-c626-44cd-ab92-b46358749392_1.8edb8080c26be49e94dc284ed5ac7c06.jpeg?odnWidth=1000&odnHeight=1000&odnBg=ffffff",
                            Name = "Toy Car",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 5,
                            Description = "Soft and cuddly teddy bear for kids.",
                            ImageUrl = "https://microless.com/cdn/products/5d0502b2d06ccd9932ddb48a82ca40b3-hi.jpg",
                            Name = "Teddy Bear",
                            Price = 14.99m
                        });
                });

            modelBuilder.Entity("BuyMart.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BuyMart.Data.Models.CartItem", b =>
                {
                    b.HasOne("BuyMart.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BuyMart.Data.Models.Product", b =>
                {
                    b.HasOne("BuyMart.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BuyMart.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
